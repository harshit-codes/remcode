name: Enhanced Session Data Validation

on:
  push:
    paths:
      - 'docs/sessions.json'
      - 'docs/SESSIONS.csv'
      - 'docs/sessions-schema.json'
  pull_request:
    paths:
      - 'docs/sessions.json'
      - 'docs/SESSIONS.csv'
      - 'docs/sessions-schema.json'

jobs:
  validate-session-data:
    runs-on: ubuntu-latest
    name: Validate Session Data Quality
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'docs/package.json'
          
      - name: Install Dependencies
        run: |
          cd docs
          npm install
          
      - name: Validate JSON Schema
        run: |
          cd docs
          npm run json:validate
          
      - name: Validate CSV Format (Legacy)
        run: |
          cd docs
          npm run validate
          
      - name: Generate Analytics
        run: |
          cd docs
          npm run json:analytics
          
      - name: Check Data Consistency
        run: |
          cd docs
          node scripts/data-consistency-check.js
          
      - name: Generate Quality Report
        run: |
          cd docs
          node scripts/advanced-analytics.js report
          
      - name: Upload Analytics Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: session-analytics-reports
          path: |
            docs/analysis/
            docs/migration.log
          retention-days: 30
          
      - name: Comment PR with Analytics
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const analyticsPath = path.join('docs', 'analysis', 'enhanced-analytics-report.md');
              if (fs.existsSync(analyticsPath)) {
                const analytics = fs.readFileSync(analyticsPath, 'utf8');
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `## ðŸ“Š Session Analytics Update
                  
${analytics.substring(0, 2000)}...

[View Full Report in Artifacts](${context.payload.pull_request.html_url}/checks)
                  `
                });
              }
            } catch (error) {
              console.log('Could not post analytics comment:', error.message);
            }
